name: pr-to-dev

on:
  pull_request:
    branches:
      - dev

jobs:
  docker-compose:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Set up Docker Compose
        run: |
          sudo apt-get install -y docker-compose

      - name: Build and run containers with docker-compose
        run: |
          docker-compose up -d  # Démarre les services en arrière-plan

      - name: Wait for services to be ready
        run: |
          # Attendre quelques secondes que les services soient prêts
          sleep 10

      - name: Run frontend tests
        run: |
          # Exécute les tests frontend dans le conteneur
          docker-compose exec frontend npm test

      - name: Run backend tests
        run: |
          # Exécute les tests backend dans le conteneur (si applicable)
          docker-compose exec backend pytest

      - name: Shutdown Docker Compose
        run: |
          docker-compose down 
        
  merge-branch:
    name: Auto-Merge Dev into Main
    runs-on: ubuntu-latest
    needs: docker-compose
    if: success() # Only run if the build-and-test job succeeds
    steps:
      # Step 1: Checkout the repository
      - name: Checkout the code
        uses: actions/checkout@v4

      # Step 2: Configure Git for the action
      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Step 3: Force push dev to main
      - name: Merge dev -> main
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: dev
          target_branch: main
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    
